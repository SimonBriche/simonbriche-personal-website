{"version":3,"file":"static/js/945.a832e343.chunk.js","mappings":"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","sources":["cmp/GalleryPostModal.js","utils/Tools.js"],"sourcesContent":["import { useEffect, useState, useRef } from \"react\";\nimport { isBootstrapAvailable, lazyLoadImages } from \"../utils/Tools\";\n\nconst GalleryPostModal = (props) => {\n  const el = useRef(null);\n  const bridge = props.bridgeEvent;\n  const [modal, setModal] = useState(null);\n  const [modalInfos, setModalInfos] = useState(null);\n  const [technologies, setTechnologies] = useState(null);\n\n  useEffect(() => {\n    if(isBootstrapAvailable(\"5\")){      \n      setModal(new window.bootstrap.Modal(el.current,{\n        keyboard: false,\n        backdrop: false\n      }));\n    }\n    else{\n      console.warn('Bootstrap 5 must be loaded to use GalleryPostModal component');\n    }\n  }, []);\n\n  useEffect(() => {\n    //if bridge and modal are set\n    if(bridge && modal){\n      let allTechnologies;\n      const getTechnologies = () => {\n        if(!allTechnologies){\n          allTechnologies = new Promise(function(resolve, reject){\n            (async () => {\n              const query = `{\n                technologies{\n                  data {id, name, link, thumbnail}\n                }\n              }`;\n              const res = await (await fetch(`${process.env.REACT_APP_CDN_URL}/graphql?query=${encodeURIComponent(query)}`)).json();\n              resolve(res.data.technologies.data);\n            })().catch(reject);\n          });\n        }\n        return allTechnologies;\n      };\n      bridge.addEventListener(\"openGalleryModal\", (e) => {\n        //populate the modal with the item infos\n        setModalInfos(e.detail);\n        //compute the technologies regarding the ist of IDs\n        getTechnologies().then(technologies => {\n          setTechnologies(e.detail.technology_ids.map(technologyId => technologies.find(item => item.id === technologyId)));\n        })\n        .catch(e => {console.log('fail to get technologies', e);})\n        .finally(()=>{\n          lazyLoadImages(el.current);\n        });\n        //show the modal and the close button\n        modal.show();\n        el.current.addEventListener('hidden.bs.modal', function (event) {\n          setModalInfos(null);\n        }, {once: true});\n        document.querySelectorAll('.footer-interface').forEach(item => item.classList.toggle('open'));\n      });\n    }\n  }, [bridge, modal]);\n\n  return ( \n    <div id=\"modal-portfolio\" className=\"modal modal-interface fade\" tabIndex=\"-1\" aria-labelledby=\"modalPortfolio\" aria-hidden=\"true\" ref={el}>\n      <div className=\"modal-dialog\">\n        <div className=\"modal-content\">\n          <div className=\"modal-body\">\n            {modalInfos &&\n              <div className=\"card portfolio-focus soft shadow rounded border-0 mx-sm-auto\">\n                <img className=\"card-img-top rounded-top\" src={`${process.env.REACT_APP_CDN_URL}/assets/images/gallery/${modalInfos.thumbnail}`} alt={modalInfos.name}/>\n                <div className=\"card-body bg-white rounded-bottom\">\n                  <h2 className=\"card-title text-red\">\n                    <strong>{modalInfos.name}</strong>\n                  </h2>\n                  <h4>{modalInfos.client}</h4>\n                  {modalInfos.pitch && \n                    <>\n                      <h6 className=\"text-red mb-0\">En résumé</h6>\n                      <div className=\"card-text mb-3\" dangerouslySetInnerHTML={{__html:modalInfos.pitch}}></div>\n                    </>\n                  }\n                  {modalInfos.description &&\n                    <>\n                      <h6 className=\"text-red mb-0\">Plus en détails</h6>\n                      <div className=\"card-text mb-3\" dangerouslySetInnerHTML={{__html:modalInfos.description}}></div>\n                    </>\n                  }\n                  <div id=\"portfolio-carousel\" className=\"carousel slide\" data-bs-ride=\"carousel\">\n                    <div className=\"carousel-inner\">\n                      {modalInfos.images && modalInfos.images.map((image, index) => (\n                        <div className={`carousel-item ${index === 0 ? \"active\" : \"\"}`} key={`carousel-image-${index}`}>\n                          <img className=\"d-block w-100 lazyload fade\" data-src={`${process.env.REACT_APP_CDN_URL}/assets/images/gallery/${image}`} alt={`${modalInfos.client}-${index}`} loading=\"lazy\"/>\n                        </div>\n                      ))}\n                    </div>\n                    {modalInfos.images && modalInfos.images.length > 0 &&\n                      <div className=\"carousel-control-container\">\n                        <button className=\"carousel-control-prev carousel-control rounded-circle m-2\" type=\"button\" data-bs-target=\"#portfolio-carousel\" data-bs-slide=\"prev\">\n                          <i className=\"fas fa-chevron-left text-red\" aria-hidden=\"true\"></i>\n                          <span className=\"visually-hidden\">Previous</span>\n                        </button>\n                        <button className=\"carousel-control-next carousel-control rounded-circle m-2\" type=\"button\" data-bs-target=\"#portfolio-carousel\" data-bs-slide=\"next\">\n                          <i className=\"fas fa-chevron-right text-red\" aria-hidden=\"true\"></i>\n                          <span className=\"visually-hidden\">Next</span>\n                        </button>\n                      </div>\n                    }\n                  </div>\n                  {modalInfos.types &&\n                    <div className=\"tags\">\n                      <ul className=\"list-inline\">\n                        {modalInfos.types.map((type, index) => (\n                          <li className=\"list-inline-item\" key={`carousel-type-${index}`}>\n                            <span className=\"badge bg-secondary rounded-pill\">{type}</span>\n                          </li>\n                        ))}\n                      </ul>\n                    </div>\n                  }\n                  {technologies &&\n                    <div className=\"techno\">\n                      <i className=\"small\">Built with</i>\n                      <ul className=\"list-inline mb-0\">\n                        {technologies.map((technology, index) => (\n                          <li className=\"list-inline-item\" key={`carousel-technology-${index}`}>\n                            <a href={technology.link} title={technology.name} target=\"_blank\" rel=\"noopener, noreferrer\">\n                              <img className=\"stack-logo bg-white rounded-circle lazyload fade me-2 mb-2\" data-src={`${process.env.REACT_APP_CDN_URL}/assets/images/stack/${technology.thumbnail}`} alt={`${technology.name}-${index}`} loading=\"lazy\"/>\n                            </a>\n                          </li>\n                        ))}\n                      </ul>\n                    </div>\n                  }\n                </div>\n              </div>\n            }\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n \nexport default GalleryPostModal;","//import \"lazysizes\";\n\nconst Tools = {\n  isBootstrapAvailable: (version) => {\n    if(!version) return true;\n    if(!(window.bootstrap && window.bootstrap.Modal && window.bootstrap.Modal.VERSION)) return false;\n    return window.bootstrap.Modal.VERSION.localeCompare(version, undefined, { numeric: true, sensitivity: 'base' }) >= 0;\n  },\n  isJQueryAvailable: (version) => {\n    if(!version) return true;\n    if(!(window.$ && window.$.fn && window.$.fn.jquery)) return false;\n    return window.$.fn.jquery.localeCompare(version, undefined, { numeric: true, sensitivity: 'base' }) >= 0;\n  },\n  lazyLoadImages: (el) => {\n    if('loading' in HTMLImageElement.prototype) {\n      const images = el.querySelectorAll(\"img.lazyload\");\n      images.forEach(img => {\n        img.onload = function(){\n          if(this.classList){\n            //adding the 'show' class \"nullify\" the 'fade' class that is applied to lazyload img\n            this.classList.add('show')\n          }\n        };\n        img.src = img.dataset.src;\n      });\n    }\n    else{\n      import('lazysizes');\n    }\n  },\n  randomString: function (length) {\n    const chars = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n    let result = '';\n    for (let i = length; i > 0; --i){\n      result += chars[Math.round(Math.random() * (chars.length - 1))];\n    }\n    return result;\n  },\n  randomBetween: function(min, max){\n    return Math.ceil(max - Math.random()*(max - (min - 1)));\n  }\n}\n\nexport const isBootstrapAvailable = Tools.isBootstrapAvailable;\nexport const isJQueryAvailable = Tools.isJQueryAvailable;\nexport const lazyLoadImages = Tools.lazyLoadImages;\nexport const randomString = Tools.randomString;\nexport const randomBetween = Tools.randomBetween;\nexport default Tools;"],"names":["props","el","useRef","bridge","bridgeEvent","useState","modal","setModal","modalInfos","setModalInfos","technologies","setTechnologies","useEffect","isBootstrapAvailable","window","bootstrap","Modal","current","keyboard","backdrop","console","warn","allTechnologies","addEventListener","e","detail","Promise","resolve","reject","fetch","process","encodeURIComponent","json","res","data","catch","then","technology_ids","map","technologyId","find","item","id","log","finally","lazyLoadImages","show","event","once","document","querySelectorAll","forEach","classList","toggle","className","tabIndex","ref","src","thumbnail","alt","name","client","pitch","dangerouslySetInnerHTML","__html","description","images","image","index","loading","length","type","types","technology","href","link","title","target","rel","Tools","version","VERSION","localeCompare","undefined","numeric","sensitivity","isJQueryAvailable","$","fn","jquery","HTMLImageElement","prototype","img","onload","this","add","dataset","randomString","chars","result","i","Math","round","random","randomBetween","min","max","ceil"],"sourceRoot":""}